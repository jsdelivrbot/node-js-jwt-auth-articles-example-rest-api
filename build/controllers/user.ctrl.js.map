{"version":3,"sources":["../../src/controllers/user.ctrl.js"],"names":["UserCtrl","create","req","res","next","setHeader","body","unique_key","email","phone","password","err","user","message","toWeb","token","getJWT","login"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW;AACbC;AAAA,2EAAQ,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJD,gCAAIE,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACMC,gCAFF,GAESJ,IAAII,IAFb;;AAAA,kCAGA,CAACA,KAAKC,UAAN,IAAoB,CAACD,KAAKE,KAA1B,IAAmC,CAACF,KAAKG,KAHzC;AAAA;AAAA;AAAA;;AAAA,6DAIO,yBAAcN,GAAd,EAAmB,oDAAnB,CAJP;;AAAA;AAAA,gCAKQG,KAAKI,QALb;AAAA;AAAA;AAAA;;AAAA,6DAMO,yBAAcP,GAAd,EAAmB,sCAAnB,CANP;;AAAA;AAQIQ,+BARJ,WAQSC,IART;AAAA;AAAA,mCAUoB,cAAG,sBAAWN,IAAX,CAAH,CAVpB;;AAAA;AAAA;AAAA;AAUCK,+BAVD;AAUMC,gCAVN;;AAAA,iCAYID,GAZJ;AAAA;AAAA;AAAA;;AAAA,6DAYgB,yBAAcR,GAAd,EAAmBQ,GAAnB,EAAwB,GAAxB,CAZhB;;AAAA;AAAA,6DAaO,2BAAgBR,GAAhB,EAAqB;AACxBU,yCAAS,gCADe;AAExBD,sCAAMA,KAAKE,KAAL,EAFkB;AAGxBC,uCAAOH,KAAKI,MAAL;AAHiB,6BAArB,EAIJ,GAJI,CAbP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADa;;AAsBbC;AAAA,4EAAO,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACGG,gCADH,GACUJ,IAAII,IADd;AAECK,+BAFD,WAEMC,IAFN;AAAA;AAAA,mCAIiB,cAAG,oBAASV,IAAII,IAAb,CAAH,CAJjB;;AAAA;AAAA;AAAA;AAIFK,+BAJE;AAIGC,gCAJH;;AAKH,gCAAID,GAAJ,EAAS,yBAAcR,GAAd,EAAmBQ,GAAnB,EAAwB,GAAxB;;AALN,8DAOI,2BAAgBR,GAAhB,EAAqB;AACxBY,uCAAOH,KAAKI,MAAL,EADiB;AAExBJ,sCAAMA,KAAKE,KAAL;AAFkB,6BAArB,CAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtBa,CAAjB;;kBAoCed,Q","file":"user.ctrl.js","sourcesContent":["import User from './../models/User';\nimport fs from 'fs';\nimport {to, responseError, responseSuccess} from './../services/util.service';\nimport {createUser, authUser} from './../services/auth.service';\n\nconst UserCtrl = {\n    create: async (req, res, next) => {\n        res.setHeader('Content-Type', 'application/json');\n        const body = req.body;\n        if (!body.unique_key && !body.email && !body.phone) {\n            return responseError(res, 'Please enter an email or phone number to register.');\n        } else if (!body.password) {\n            return responseError(res, 'Please enter a password to register.');\n        } else {\n            let err, user;\n\n            [err, user] = await to(createUser(body));\n\n            if (err) return responseError(res, err, 422);\n            return responseSuccess(res, {\n                message: 'Successfully created new user.',\n                user: user.toWeb(),\n                token: user.getJWT()\n            }, 201);\n        }\n    },\n\n    login: async (req, res) => {\n        const body = req.body;\n        let err, user;\n\n        [err, user] = await to(authUser(req.body));\n        if (err) responseError(res, err, 422);\n\n        return responseSuccess(res, {\n            token: user.getJWT(),\n            user: user.toWeb()\n        });\n    }\n};\n\nexport default UserCtrl;\n"]}