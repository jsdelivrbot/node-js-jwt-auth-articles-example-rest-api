{"version":3,"sources":["../../src/models/Article.js"],"names":["ArticleSchema","mongoose","Schema","text","String","title","description","feature_img","claps","Number","author","type","Types","ObjectId","ref","comments","methods","clap","save","comment","c","push","addAuthor","author_id","getUserArticle","_id","Article","find","then","article","model"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAIA,gBAAgB,IAAIC,mBAASC,MAAb,CAChB;AACIC,UAAMC,MADV;AAEIC,WAAOD,MAFX;AAGIE,iBAAaF,MAHjB;AAIIG,iBAAaH,MAJjB;AAKII,WAAOC,MALX;AAMIC,YAAQ;AACJC,cAAMV,mBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADxB;AAEJC,aAAK;AAFD,KANZ;AAUIC,cAAU,CACN;AACIL,gBAAQ;AACJC,kBAAMV,mBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADxB;AAEJC,iBAAK;AAFD,SADZ;AAKIX,cAAMC;AALV,KADM;AAVd,CADgB,CAApB;;AAwBAJ,cAAcgB,OAAd,CAAsBC,IAAtB,GAA6B,YAAW;AACpC,SAAKT,KAAL;AACA,WAAO,KAAKU,IAAL,EAAP;AACH,CAHD;;AAKAlB,cAAcgB,OAAd,CAAsBG,OAAtB,GAAgC,UAASC,CAAT,EAAY;AACxC,SAAKL,QAAL,CAAcM,IAAd,CAAmBD,CAAnB;AACA,WAAO,KAAKF,IAAL,EAAP;AACH,CAHD;;AAMAlB,cAAcgB,OAAd,CAAsBM,SAAtB,GAAkC,UAAUC,SAAV,EAAqB;AACnD,SAAKb,MAAL,GAAca,SAAd;AACA,WAAO,KAAKL,IAAL,EAAP;AACH,CAHD;;AAKAlB,cAAcgB,OAAd,CAAsBQ,cAAtB,GAAuC,UAAUC,GAAV,EAAe;AAClDC,YAAQC,IAAR,CAAa,EAAC,UAAUF,GAAX,EAAb,EAA8BG,IAA9B,CAAmC,UAACC,OAAD,EAAa;AAC5C,eAAOA,OAAP;AACH,KAFD;AAGH,CAJD;;kBAOe5B,mBAAS6B,KAAT,CAAe,SAAf,EAA0B9B,aAA1B,C","file":"Article.js","sourcesContent":["import mongoose from 'mongoose';\n\nlet ArticleSchema = new mongoose.Schema(\n    {\n        text: String,\n        title: String,\n        description: String,\n        feature_img: String,\n        claps: Number,\n        author: {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'User'\n        },\n        comments: [\n            {\n                author: {\n                    type: mongoose.Schema.Types.ObjectId,\n                    ref: 'User'\n                },\n                text: String\n            }\n        ]\n    }\n);\n\n\nArticleSchema.methods.clap = function() {\n    this.claps++;\n    return this.save()\n};\n\nArticleSchema.methods.comment = function(c) {\n    this.comments.push(c);\n    return this.save()\n};\n\n\nArticleSchema.methods.addAuthor = function (author_id) {\n    this.author = author_id;\n    return this.save()\n};\n\nArticleSchema.methods.getUserArticle = function (_id) {\n    Article.find({'author': _id}).then((article) => {\n        return article\n    })\n};\n\n\nexport default mongoose.model('Article', ArticleSchema);\n"]}