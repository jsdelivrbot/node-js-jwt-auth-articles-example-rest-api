{"version":3,"sources":["../../src/services/util.service.js"],"names":["promise","err","res","to","responseError","responseSuccess","throwError","code","message","statusCode","json","success","error","data","send_data","Object","assign","err_message","log","console","Error"],"mappings":";;;;;;;;;;;;uEAGO,iBAAmBA,OAAnB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCC,2BADD,WACMC,GADN;AAAA;AAAA,+BAEgB,mBAAQF,OAAR,CAFhB;;AAAA;AAAA;AAAA;AAEFC,2BAFE;AAEGC,2BAFH;;AAAA,6BAGAD,GAHA;AAAA;AAAA;AAAA;;AAAA,yDAGY,CAAC,0BAAGA,GAAH,CAAD,CAHZ;;AAAA;AAAA,yDAII,CAAC,IAAD,EAAOC,GAAP,CAJJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,E;;;;;QAONC,a,GAAAA,a;QASAC,e,GAAAA,e;QAUAC,U,GAAAA,U;;AA7BhB;;AACA;;;;;;;;AASO,SAASF,aAAT,CAAwBF,GAAxB,EAA6BD,GAA7B,EAAkCM,IAAlC,EAAwC;AAAE;AAC7C,QAAG,QAAON,GAAP,yCAAOA,GAAP,MAAc,QAAd,IAA0B,OAAOA,IAAIO,OAAX,IAAsB,WAAnD,EAA+D;AAC3DP,cAAMA,IAAIO,OAAV;AACH;AACD,QAAG,OAAOD,IAAP,KAAgB,WAAnB,EAAgCL,IAAIO,UAAJ,GAAiBF,IAAjB;AAChC,WAAOL,IAAIQ,IAAJ,CAAS,EAACC,SAAQ,KAAT,EAAgBC,OAAOX,GAAvB,EAAT,CAAP;AACH;;AAGM,SAASI,eAAT,CAA0BH,GAA1B,EAA+BW,IAA/B,EAAqCN,IAArC,EAA2C;AAAE;AAChD,QAAIO,YAAY,EAACH,SAAQ,IAAT,EAAhB;AACA,QAAG,QAAOE,IAAP,yCAAOA,IAAP,MAAe,QAAlB,EAA2B;AACvBC,oBAAYC,OAAOC,MAAP,CAAcH,IAAd,EAAoBC,SAApB,CAAZ,CADuB,CACoB;AAC9C;AACD,QAAG,OAAOP,IAAP,KAAgB,WAAnB,EAAgCL,IAAIO,UAAJ,GAAiBF,IAAjB;AAChC,WAAOL,IAAIQ,IAAJ,CAASI,SAAT,CAAP;AACH;;AAGM,SAASR,UAAT,CAAqBW,WAArB,EAAkCC,GAAlC,EAAuC;AAAE;AAC5C,QAAGA,QAAQ,IAAX,EAAgB;AACZC,gBAAQP,KAAR,CAAcK,WAAd;AACH;AACD,UAAM,IAAIG,KAAJ,CAAUH,WAAV,CAAN;AACH","file":"util.service.js","sourcesContent":["import {to as awaitTo} from 'await-to-js';\nimport pe from 'parse-error';\n\nexport async function to (promise) {\n    let err, res;\n    [err, res] = await awaitTo(promise);\n    if(err) return [pe(err)];\n    return [null, res];\n}\n\nexport function responseError (res, err, code) { // Error Web Response\n    if(typeof err == 'object' && typeof err.message != 'undefined'){\n        err = err.message;\n    }\n    if(typeof code !== 'undefined') res.statusCode = code;\n    return res.json({success:false, error: err});\n}\n\n\nexport function responseSuccess (res, data, code) { // Success Web Response\n    let send_data = {success:true};\n    if(typeof data == 'object'){\n        send_data = Object.assign(data, send_data);//merge the objects\n    }\n    if(typeof code !== 'undefined') res.statusCode = code;\n    return res.json(send_data)\n}\n\n\nexport function throwError (err_message, log) { // throwError stands for Throw Error\n    if(log === true){\n        console.error(err_message);\n    }\n    throw new Error(err_message);\n}\n"]}