{"version":3,"sources":["../src/index.js"],"names":["app","router","express","Router","mongoose","connect","CONFIG","database_url","useNewUrlParser","err","res","console","error","log","use","bodyParser","json","urlencoded","extended","passport","initialize","static","path","join","__dirname","set","get","req","render","process","on","next","Error","status","locals","message","listen","port"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,SAASC,kBAAQC,MAAR,EAAf;;AAEAC,mBAASC,OAAT,CAAiBC,iBAAOC,YAAxB,EAAsC;AAClCC,qBAAiB;AADiB,CAAtC,EAEG,UAACC,GAAD,EAAKC,GAAL,EAAa;AACZ,QAAID,GAAJ,EAAS;AACLE,gBAAQC,KAAR,CAAe,0BAA0BN,iBAAOC,YAAjC,GAAgD,IAAhD,GAAuDE,GAAtE;AACH,KAFD,MAEO;AACHE,gBAAQE,GAAR,CAAa,6BAA6BP,iBAAOC,YAAjD;AACH;AACJ,CARD;;AAWAP,IAAIc,GAAJ,CAAQ,qBAAR;AACAd,IAAIc,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAhB,IAAIc,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAlB,IAAIc,GAAJ,CAAQ,uBAAR;AACAd,IAAIc,GAAJ,CAAQK,mBAASC,UAAT,EAAR;AACA,wBAAkBD,kBAAlB;;AAGAnB,IAAIc,GAAJ,CAAQZ,kBAAQmB,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,QAA3B,CAAf,CAAR;AACAxB,IAAIyB,GAAJ,CAAQ,OAAR,EAAiBH,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,OAA3B,CAAjB,EACKC,GADL,CACS,aADT,EACwB,KADxB;;AAGAzB,IAAI0B,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMjB,GAAN;AAAA,WAAcA,IAAIkB,MAAJ,CAAW,aAAX,CAAd;AAAA,CAAb;;AAEA,sBAAY3B,MAAZ;AACAD,IAAIc,GAAJ,CAAQ,MAAR,EAAgBb,MAAhB;;AAEA4B,QAAQC,EAAR,CAAW,oBAAX,EAAiC,iBAAS;AACtCnB,YAAQC,KAAR,CAAc,gBAAd,EAAgC,0BAAGA,KAAH,CAAhC;AACH,CAFD;;AAIA;AACAZ,IAAIc,GAAJ,CAAQ,UAASa,GAAT,EAAcjB,GAAd,EAAmBqB,IAAnB,EAAyB;AAC7B,QAAItB,MAAM,IAAIuB,KAAJ,CAAU,WAAV,CAAV;AACAvB,QAAIwB,MAAJ,GAAa,GAAb;AACAF,SAAKtB,GAAL;AACH,CAJD;;AAMA;AACAT,IAAIc,GAAJ,CAAQ,UAASL,GAAT,EAAckB,GAAd,EAAmBjB,GAAnB,EAAwBqB,IAAxB,EAA8B;AAClC;AACArB,QAAIwB,MAAJ,CAAWC,OAAX,GAAqB1B,IAAI0B,OAAzB;AACAzB,QAAIwB,MAAJ,CAAWtB,KAAX,GAAmBe,IAAI3B,GAAJ,CAAQ0B,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCjB,GAAvC,GAA6C,EAAhE;;AAEA;AACAC,QAAIuB,MAAJ,CAAWxB,IAAIwB,MAAJ,IAAc,GAAzB;AACAvB,QAAIM,IAAJ,CAASP,GAAT;AACH,CARD;;AAUAT,IAAIoC,MAAJ,CAAW9B,iBAAO+B,IAAlB,EAAwB;AAAA,WAAM1B,QAAQE,GAAR,mBAA6BP,iBAAO+B,IAApC,CAAN;AAAA,CAAxB","file":"index.js","sourcesContent":["import \"babel-polyfill\"\nimport express from 'express';\nimport path from 'path';\nimport mongoose from 'mongoose';\nimport setupRoutes from './routes';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport pe from 'parse-error';\nimport CONFIG from './config/config';\nimport passportMiddlware from './middleware/passport';\n\nconst app = express();\nconst router = express.Router();\n\nmongoose.connect(CONFIG.database_url, {\n    useNewUrlParser: true\n}, (err,res) => {\n    if (err) {\n        console.error ('ERROR connecting to: ' + CONFIG.database_url + '. ' + err);\n    } else {\n        console.log ('Succeeded connected to: ' + CONFIG.database_url);\n    }\n});\n\n\napp.use(cors());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(helmet());\napp.use(passport.initialize());\npassportMiddlware(passport);\n\n\napp.use(express.static(path.join(__dirname, '..', 'public')));\napp.set('views', path.join(__dirname, '..', 'views'))\n    .set('view engine', 'ejs');\n\napp.get('/', (req, res) => res.render('pages/index'));\n\nsetupRoutes(router);\napp.use('/api', router);\n\nprocess.on('unhandledRejection', error => {\n    console.error('Uncaught Error', pe(error));\n});\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.json(err);\n});\n\napp.listen(CONFIG.port, () => console.log(`Listening on ${ CONFIG.port }`))\n"]}